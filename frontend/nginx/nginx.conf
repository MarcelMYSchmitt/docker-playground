##################################################################################
##                                                                              ##
##  Prometheus Metrics in NGINX: https://github.com/knyar/nginx-lua-prometheus  ##
##                                                                              ##
##################################################################################

worker_processes  1;

load_module /usr/lib/nginx/modules/ndk_http_module.so;
load_module /usr/lib/nginx/modules/ngx_http_lua_module.so;

events {
    worker_connections  1024;
}

http {
    map $http_upgrade $connection_upgrade {
      default upgrade;
      '' close;
    }


    lua_shared_dict prometheus_metrics 10M;
    lua_package_path "/etc/nginx/nginx-lua-prometheus/?.lua";
    init_by_lua '
        prometheus = require("prometheus").init("prometheus_metrics")
        metric_requests = prometheus:counter("nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
        metric_latency = prometheus:histogram("nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
        metric_connections = prometheus:gauge("nginx_http_connections", "Number of HTTP connections", {"state"})
    ';

    log_by_lua '
        local host = ngx.var.host:gsub("^www.", "")
        metric_requests:inc(1, {host, ngx.var.status})
        metric_latency:observe(tonumber(ngx.var.request_time), {host})
    ';
	
    server {
      listen 80;
      server_name frontend;

      root   /usr/share/nginx/html;
      index  index.html index.htm;
      include /etc/nginx/mime.types;
 
      gzip on;
      gzip_min_length 1000;
      gzip_proxied expired no-cache no-store private auth;
      gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
 
      location / {
        try_files $uri $uri/ /index.html;
      }
   }

    server {
        listen 9145;

        location / {
            proxy_pass http://localhost:80;
        }

        location /metrics {
            content_by_lua '
                metric_connections:set(ngx.var.connections_reading, {"reading"})
                metric_connections:set(ngx.var.connections_waiting, {"waiting"})
                metric_connections:set(ngx.var.connections_writing, {"writing"})
                prometheus:collect()
            ';
        }
    }
}
